@using System.Linq
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model PostViewModel
@{
    ViewData["Title"] = @Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="s-content s-content--narrow s-content--no-padding-bottom">
    <article class="row">
        <div class="s-content__header col-full">
            <h1 class="s-content__header-title">
                @Model.Title
            </h1>
            <label class="postTitleDate">Published @Model.PubDate</label>
            <hr/>
            <div class="form-field postTools">
                <div class="row">
                    <div class="col-md-4">
                        @if ((await AuthorizationService
                            .AuthorizeAsync(User, "CanAccessPostManager")).Succeeded)
                        {
                            <button onclick="location.href = '@Url.Action("Index", "PostManager", new {})'"
                                    class="btn-cust btn-cust--small btn-cust--pill btn-cust--stroke"
                                    type="button">
                                Post Manager
                            </button>
                        }
                    </div>
                    <div class="col-md-4">
                        @if ((await AuthorizationService
                            .AuthorizeAsync(User, "CanEditPosts")).Succeeded)
                        {
                            <button onclick="location.href = '@Url.Action("Edit", "PostManager",
                                                                  new {postId = @Model.Id})'"
                                    type="button" class="btn-cust btn-cust--small 
                                    btn-cust--pill btn-cust--stroke">
                                Edit Post
                            </button>
                        }
                    </div>
                    <div class="col-md-4">
                        @if ((await AuthorizationService
                            .AuthorizeAsync(User, "CanDeletePosts")).Succeeded)
                        {
                            <form asp-controller="Blog" asp-action="Delete" asp-route-postId="@Model.Id"
                                  method="post" id="postDeleteForm" asp-antiforgery="true">
                                <button id="btnDeletePost" type="submit" form="postDeleteForm"
                                        class="btn-cust btn-cust--small 
                                        btn-cust--pill btn-cust--stroke">
                                    Delete Post
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-full s-content__main">
            @Html.Raw(Model.Content)
        </div>
    </article>
    <div class="comments-wrap">

        <div id="comments" class="row">
            <div class="col-full">
                <div class="respond">
                    @if ((await AuthorizationService.AuthorizeAsync(User, "CanComment")).Succeeded)
                    {
                        <h3 class="h2">Leave a comment</h3>
                        <form asp-controller="Blog" asp-action="AddComment" asp-antiforgery="true"
                              asp-route-postId="@Model.Id" asp-route-postSlug="@Model.Slug" id="commentForm">
                            <div class="form-group">
                                <textarea asp-for="Comment" class="form-control"
                                          style="resize: vertical;" rows="5" placeholder="Your comment..."></textarea>
                                <span asp-validation-for="Comment" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <button type="submit" form="commentForm"
                                        class="btn-cust btn-cust--stroke full-width">
                                    Add Comment
                                </button>
                            </div>
                        </form>
                        <hr/>
                    }
                    else
                    {
                        <div style="text-align: center;">
                            <h3 class="h2">Please log in to post comments</h3>
                            <button title="Login" type="button" class="btn-cust btn-cust--stroke"
                                    onclick="location.href = '@Url.Action("/Account/Login", "Identity")'">
                                Login
                            </button>
                        </div>
                    }
                </div>

                @{
                    await Html.RenderPartialAsync("Comments");
                }
            </div>
        </div>
    </div>
</section>


@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
        $(document).ready(function() {
            $("#btnDeletePost").click(function(e) {
                e.preventDefault();

                swal({
                        title: "Are you sure?",
                        text: "This post will be deleted permanently!",
                        icon: "warning",
                        buttons: true,
                        dangerMode: true
                    })
                    .then((willDelete) => {
                        if (willDelete) {
                            $('#postDeleteForm').submit();
                        }
                    });
            });
        });
    </script>
    @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeleteComments")).Succeeded)
    {
        <script>
            $(document).ready(function() {
                $(".btnDeleteComment").click(function() {
                    var btnId = this.id;
                    var commentId = btnId.replace('btnDelete-', '');
                    var postSlug = '@Model.Slug';
                    swal({
                            title: "Are you sure?",
                            text: "This comment will be deleted permanently!",
                            icon: "warning",
                            buttons: true,
                            dangerMode: true
                        })
                        .then((willDelete) => {
                            if (willDelete) {

                                var inputCommentId = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "commentId").val(commentId);
                                var inputSlug = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "postSlug").val(postSlug);
                                $('#deleteCommentForm').append(inputCommentId);
                                $('#deleteCommentForm').append(inputSlug);
                                $('#deleteCommentForm').submit();
                            }
                        });
                });
            });
        </script>
    }
}