@using System.Linq
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model PostViewModel
@{
    ViewData["Title"] = @Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container container-fluid">
    <div class="row">
        <h2>@Model.Title</h2>
        <h5>Published @Model.PubDate</h5>
        
        @if ((await AuthorizationService.AuthorizeAsync(User, "CanAccessPostManager")).Succeeded)
        {
            <button type="button"
                    onclick="location.href = '@Url.Action("Index", "PostManager", new {})'"
                    class="btn btn-default btn-xs pull-left" style="margin-right: 5px">
                Post Manager
            </button>
        }

        @if ((await AuthorizationService.AuthorizeAsync(User, "CanEditPosts")).Succeeded)
        {
            <button type="button"
                    onclick="location.href = '@Url.Action("Edit", "PostManager", new {postId = @Model.Id})'"
                    class="btn btn-primary btn-xs pull-left" style="margin-right: 5px">
                Edit Post
            </button>
        }

        @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeletePosts")).Succeeded)
        {
            <form asp-controller="Blog" asp-action="Delete" asp-route-postId="@Model.Id"
                  method="post" id="postDeleteForm">
                @Html.AntiForgeryToken()
                <input id="btnDeletePost" type="submit" value="Delete Post"
                       class="btn btn-danger btn-xs pull-left" />
            </form>
        }
        <div class="clearfix"></div>
        <hr />

        @Html.Raw(Model.Content)
    </div>

    <div class="row">
        <hr/>
        @if ((await AuthorizationService.AuthorizeAsync(User, "CanComment")).Succeeded)
        {
            <h2>Leave a comment</h2>
            <form asp-controller="Blog" asp-action="AddComment" asp-antiforgery="true"
                  asp-route-postId="@Model.Id" asp-route-postSlug="@Model.Slug">
                <div class="form-group">
                    <textarea asp-for="Comment" class="form-control"
                              style="resize: vertical;" rows="5">
                </textarea>
                    <span asp-validation-for="Comment" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Add Comment" class="btn btn-success"/>
                </div>
            </form>
            <hr/>
        }
        else
        {
            <h3>Please log in to post comments</h3>
        }
    </div>
    <div class="row">
        @{
            await Html.RenderPartialAsync("Comments");
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
        $(document).ready(function() {
            $("#btnDeletePost").click(function(e) {
                e.preventDefault();

                swal({
                        title: "Are you sure?",
                        text: "This post will be deleted permanently!",
                        icon: "warning",
                        buttons: true,
                        dangerMode: true
                    })
                    .then((willDelete) => {
                        if (willDelete) {
                            $('#postDeleteForm').submit();
                        }
                    });
            });
        });
    </script>
    @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeleteComments")).Succeeded)
    {
        <script>
            $(document).ready(function() {
                $(".btnDeleteComment").click(function() {
                    var btnId = this.id;
                    var commentId = btnId.replace('btnDelete-', '');
                    var postSlug = '@Model.Slug';
                    swal({
                            title: "Are you sure?",
                            text: "This comment will be deleted permanently!",
                            icon: "warning",
                            buttons: true,
                            dangerMode: true
                        })
                        .then((willDelete) => {
                            if (willDelete) {

                                var inputCommentId = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "commentId").val(commentId);
                                var inputSlug = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "postSlug").val(postSlug);
                                $('#deleteCommentForm').append(inputCommentId);
                                $('#deleteCommentForm').append(inputSlug);
                                $('#deleteCommentForm').submit();
                            }
                        });
                });
            });
        </script>
    }
}