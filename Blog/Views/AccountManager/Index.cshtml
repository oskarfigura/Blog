@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model AccountManagerViewModel
@{
    ViewData["Title"] = "Account Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <h2>@ViewData["Title"]</h2>
        <hr/>
    </div>

    <div class="row">
        <div class="form-group">
            @using (Html.BeginForm("Index", "AccountManager", 
                FormMethod.Get, new {id = "searchForm"}))
            {
                <div class="form-group">
                    <label for="inputSearchUserName">Find by username:</label>

                    @Html.TextBoxFor(m => m.AccountSearch.UserName, new
                    {
                        @class = "form-control", @id = "inputSearchUserName",
                        @placeholder = "Search by username"
                    })
                </div>

                <div class="form-group">
                    <label for="filterByRole">Filter by role:</label>

                    @Html.DropDownListFor(m => m.AccountSearch.Role, 
                        Model.AvailableIdentityRoles.Select(item => new SelectListItem
                        {Value = item.Name.ToString(), Text = item.Name.ToString(),}), 
                        "All Roles", new {@class = "form-control", @id = "filterByRole"})

                </div>
                <button type="submit" class="btn btn-primary">Search</button>
            }
        </div>
    </div>
    @if (!Model.Accounts.Any())
    {
        <h4>No accounts found.</h4>
    }
    @if (Model.Accounts.Any())
    {
        <div class="row">
            <div class="table-responsive">
                <table class="table">
                    <tr>
                        <th>
                            Username
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Accounts.First().Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Accounts.First().Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Accounts.First().DisplayName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Accounts.First().Role)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var user in Model.Accounts)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => user.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.DisplayName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => user.Role)
                            </td>
                            <td>
                                @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeleteUsers")).Succeeded)
                                {
                                    <button type="button" id="btnDelete-@user.UserName" style="margin-right: 5px"
                                            class="btn btn-danger btn-xs pull-right btnDeleteUser">Delete
                                    </button>
                                }

                                @if ((await AuthorizationService.AuthorizeAsync(User, "CanEditUsers")).Succeeded)
                                {
                                    <button type="button" class="btn btn-primary btn-xs pull-right"
                                            onclick="location.href = '@Url.Action("Edit", "AccountManager",
                                                                          new {userName = user.UserName})'"
                                             style="margin-right: 5px">Edit
                                    </button>
                                }

                                <button type="button" class="btn btn-primary btn-xs pull-right"
                                        onclick="location.href = '@Url.Action("Details", "AccountManager",
                                                                      new {userName = user.UserName})'"
                                         style="margin-right: 5px">View
                                </button>
                            </td>
                        </tr>
                    }
                </table>
            </div>
            @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeleteUsers")).Succeeded)
            {
                <form asp-controller="AccountManager" asp-action="Delete" 
                      method="post" id="postDeleteUser" asp-antiforgery="true">
                </form>
            }
        </div>
    }
</div>

@section Scripts
{
    @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeleteUsers")).Succeeded)
    {
        <script>
            $(document).ready(function() {
                $(".btnDeleteUser").click(function() {
                    var btnId = this.id;
                    var username = btnId.replace('btnDelete-', '');

                    swal({
                            title: "Are you sure?",
                            text: "This user will be deleted permanently!",
                            icon: "warning",
                            buttons: true,
                            dangerMode: true
                        })
                        .then((willDelete) => {
                            if (willDelete) {

                                var input = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "userName").val(username);
                                $('#postDeleteUser').append(input);
                                $('#postDeleteUser').submit();
                            }
                        });
                });
            });
        </script>
    }
    @if (ViewData["AccManagerMessage"] != null)
    {
        <script>
            $(document).ready(function() {
                swal("@ViewData["AccManagerMessage"]", { icon: "info" });
            });
        </script>
    }
}