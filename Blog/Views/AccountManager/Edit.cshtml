@model AccountViewModel
@{
    ViewData["Title"] = "Edit Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        {
            <div class="form-horizontal">
                <h3>Edit account: @Html.DisplayFor(model => model.UserAccount.UserName)</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserAccount.Id)
                @Html.HiddenFor(model => model.UserAccount.UserName)

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAccount.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAccount.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserAccount.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAccount.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAccount.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserAccount.DisplayName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAccount.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAccount.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserAccount.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAccount.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserAccount.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserAccount.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserAccount.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(x => Model.UserAccount.Role, new SelectList(Model.AvailableIdentityRoles), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default" })
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (ViewData["EditResult"] != null)
    {
        <script>
            $(document).ready(function() {
                swal("@ViewData["EditResult"]", { icon: "info" });
            });
        </script>
    }
}