@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model PostManagerViewModel

@{
    ViewData["Title"] = "Post Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="s-content">
    <div class="row s-content__header">
        <h1>@ViewData["Title"]</h1>
        <hr/>
    </div>
    <div class="row">
        @if (!Model.BlogPosts.Any())
        {
            if (Model.SearchData != null)
            {
                <h4>Your search, did not match any posts.</h4>
                <button type="button" onclick="location.href = '@Url.Action("Index", "PostManager")'"
                        class="btn-cust">
                    View all posts
                </button>
            }
            else
            {
                <h4>There are currently no posts on this blog.</h4>
            }
            <button type="button" onclick="location.href = '@Url.Action("AddPost", "PostManager")'"
                    class="btn-cust btn-cust--success">
                Create New Post
            </button>
        }
    </div>

    @if (Model.BlogPosts.Any())
    {
        <div class="row">
            <div class="form-field">
                @using (Html.BeginForm("Index", "PostManager", FormMethod.Get))
                {
                    <div class="form-field">
                        <label for="inputPostTitle">Find by post title:</label>

                        @Html.TextBoxFor(m => m.SearchData.PostTitle, new
                        {
                            @class = "full-width", @id = "inputPostTitle",
                            @placeholder = "Search by post title"
                        })
                    </div>
                    <div class="form-field">
                        <label>Filter posts by publish status: </label>
                        <select asp-for="@Model.SearchData.PublishStatus"
                                asp-items="Html.GetEnumSelectList<PostManagerSearch.PublishStatusList>()"
                                class="full-width">
                        </select>
                    </div>
                    <button type="submit" class="btn-cust">Search</button>
                    <button type="button" onclick="location.href = '@Url.Action("AddPost", "PostManager")'"
                            class="btn-cust btn-cust--success">
                        Create New Post
                    </button>
                }
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.BlogPosts.First().Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BlogPosts.First().AuthorUserName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BlogPosts.First().IsPublished)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BlogPosts.First().PubDate)
                        </th>
                        <th></th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.BlogPosts)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AuthorUserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsPublished)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PubDate)
                            </td>
                            <td>
                                <button onclick="location.href = '@Url.Action("Post", "Blog", new {slug = @item.Slug})'"
                                        type="button" class="btn-cust btn-cust--small btn-cust--pill">
                                    View
                                </button>
                            </td>
                            <td>
                                @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeletePosts")).Succeeded)
                                {
                                    <button class="btn-cust btn-cust--small btn-cust--pill btn-cust--danger btnDeletePost"
                                            type="button" id="btnDelete-@item.Id">
                                        Delete
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeletePosts")).Succeeded)
            {
                <form asp-controller="PostManager" asp-action="Delete"
                      method="post" id="postDeletePost" asp-antiforgery="true">
                </form>
            }
        </div>
    }
</section>

@section Scripts
{
    @if ((await AuthorizationService.AuthorizeAsync(User, "CanDeletePosts")).Succeeded)
    {
        <script>
            $(document).ready(function() {
                $(".btnDeletePost").click(function() {
                    var btnId = this.id;
                    var postId = btnId.replace('btnDelete-', '');

                    swal({
                            title: "Are you sure?",
                            text: "This post will be deleted permanently!",
                            icon: "warning",
                            buttons: true,
                            dangerMode: true
                        })
                        .then((willDelete) => {
                            if (willDelete) {

                                var input = $("<input>")
                                    .attr("type", "hidden")
                                    .attr("name", "postId").val(postId);
                                $('#postDeletePost').append(input);
                                $('#postDeletePost').submit();
                            }
                        });
                });
            });
        </script>
    }

    @if (ViewData["PostManagerMessage"] != null)
    {
        <script>
            $(document).ready(function() {
                swal("@ViewData["PostManagerMessage"]", { icon: "info" });
            });
        </script>
    }
}