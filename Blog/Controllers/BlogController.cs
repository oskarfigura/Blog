using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Blog.Areas.Identity.Data;
using Blog.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace Blog.Controllers
{
    public class BlogController : Controller
    {
        private readonly IPostRepo _postRepo;

        public BlogController(IPostRepo postRepo)
        {
            _postRepo = postRepo;
        }

        public IActionResult Index()
        {
            //TODO HOME PAGE list all posts 
            return View();
        }

        [Route("/Blog/Post/{slug?}")]
        public async Task<IActionResult> Post(string slug)
        {
            if (string.IsNullOrEmpty(slug))
            {
                return NotFound();
            }

            var post = await _postRepo.GetPublishedPostBySlug(slug);

            if (string.IsNullOrEmpty(post.Id))
            {
                return NotFound();
            }

            if (string.IsNullOrEmpty(post.Content))
            {
                return NotFound();
            }

            var formattedContent = FormatPostContent(post.Content);

            return View(new PostViewModel()
            {
                Id = post.Id,
                Title = post.Title,
                Content = formattedContent,
                PubDate = post.PubDate,
                Comments = post.Comments
            });
        }

        /**
         * Updates html generated by wysiwyg editor to ensure that content
         * is mobile friendly and fullscreen button is enabled
         */
        private static string FormatPostContent(string content)
        {
            var result = content;
            if (string.IsNullOrEmpty(result)) return result;

            const string startOfVideoTags =
                "<div class=\"embed-responsive embed-responsive-16by9\"><iframe allowfullscreen=\"true\"";
            const string endOfVideoTags = "></iframe></div>";
            result = result.Replace("<iframe ", startOfVideoTags).Replace("></iframe>", endOfVideoTags);

            return result;
        }
    }
}